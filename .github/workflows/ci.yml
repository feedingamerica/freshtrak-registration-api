name: CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Inspect MySQL (on failure)
        run: |
          echo "${{ toJson(job) }}"
          docker logs "${{ job.services.mysql.id }}"
        if: failure()
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.5
      - name: Cache Dependencies
        uses: actions/cache@v1
        with:
          path: ${{env.working-directory}}/vendor/bundle
          key: ${{ runner.os }}-bundler-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-bundler-
      - name: Setup
        env:
          DB_HOST: 127.0.0.1
          JETS_ENV: test
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
          bundle exec jets db:create db:migrate
      - name: Run Tests
        env:
          DB_HOST: 127.0.0.1
          JETS_ENV: test
        run: |
          bundle exec rspec
      # https://github.com/codecov/codecov-bash
      - name: Upload Coverage Report
        run: |
          bash <(curl -s https://codecov.io/bash) -Z

  lint:
    name: Run Linter
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.5
      - name: Cache Dependencies
        uses: actions/cache@v1
        with:
          path: ${{env.working-directory}}/vendor/bundle
          key: ${{ runner.os }}-bundler-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-bundler-
      - name: Setup
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
      - name: Lint
        run: |
          bundle exec rubocop
